# values.yaml

# Enable the Prometheus Operator
prometheusOperator:
  enabled: true

# Configure Prometheus instance
prometheus:
  enabled: true
  prometheusSpec:
    retention: "10d" # How long to keep data
    resources:
      requests:
        memory: "400Mi"
        cpu: "200m"
    serviceMonitorSelector:
      matchLabels:
        team: frontend
    podMonitorSelector:
      matchLabels:
        team: frontend
    alerting:
      alertmanagers:
        - name: "alertmanager-main"
          namespace: "prometheus"
          port: "web"

# Configure Alertmanager instance
alertmanager:
  enabled: true
  alertmanagerSpec:
    resources:
      requests:
        memory: "1024Mi"
        cpu: "800m"
    externalUrl: "http://alertmanager.example.com"

# Configure Grafana instance
grafana:
  enabled: true
  adminPassword: "admin" # Default admin password for Grafana
  sidecar:
    dashboards:
      enabled: true
    datasources:
      enabled: true
  service:
    type: LoadBalancer

# Configure ServiceMonitor
serviceMonitor:
  enabled: true

# Configure PodMonitor
podMonitor:
  enabled: true

# Set up the namespace for all resources
namespace:
  name: "prometheus"

# Specify whether to create CRDs (Custom Resource Definitions)
createCustomResourceDefinitions: true

# Set the version of the Prometheus Operator chart
version: "17.0.0" # Change according to the chart version you need

# adding custom alert and recording rules
additionalPrometheusRulesMap:
  custom-alert-rules:
  groups:
    - name: InfraBoomiInstanceDown.rules
      rules:
        - alert: InfraInstanceDown
          expr: up{instance=~"(?i).*boomi.*"} == 0
          for: 15m
          labels:
            severity: bus-critical
          annotations:
            description: "Server: {{ $labels.instance }} in Env: {{ $labels.job }} is not reachable from Prometheus for last 15 minutes."
            summary: "Server: {{ $labels.instance }} is not reachable from Prometheus"
