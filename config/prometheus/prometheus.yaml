# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
        # - alertmanager:9093

        # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
# The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
- job_name: "prometheus"

  # metrics_path defaults to '/metrics'
  # scheme defaults to 'http'.

  static_configs:
  - targets: [ "localhost:9090" ]

- job_name: 'node_export'
  static_configs:
  - targets: [ "localhost:9100" ]

- job_name: 'aws-ec2'
  ec2_sd_configs:
  - region: us-west-1 # Replace with your AWS region
  relabel_configs:
  - source_labels: [ __meta_ec2_tag_Name ]
    regex: ubuntu-node.* # Match instances with a specific Name tag
    action: keep
  - source_labels: [ __meta_ec2_private_ip ]
    target_label: __address__
    replacement: "$1:9100" # Replace 9100 with the port your exporter listens on

- job_name: 'ec2-rabbitmq-exporter'
  ec2_sd_configs:
  - region: us-west-1 # Replace with your AWS region
  relabel_configs:
  - source_labels: [ __meta_ec2_tag_Name ]
    regex: ubuntu-node.*
    action: keep
  - source_labels: [ __meta_ec2_private_ip ]
    target_label: instance
  # Assign port 9419 for rabbitmq-node-exporter
  - source_labels: [ __meta_ec2_private_ip ]
    target_label: __address__
    replacement: '${1}:15692' # RabbitMQ Exporter port
